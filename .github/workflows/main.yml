name: Deploy Lambda

on:
  push:
    branches: [main]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest # tells github where to build 
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
  
      - name: Node setup
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: npm config set package-lock true # set to true to generate package-lock.json on npm install
        run: npm config set package-lock true

      - name: npm install # install dependencies
        run: npm i

      - name: npm ci
        run: npm ci 
        
  sonarqube:
    name: SonarQube Trigger
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checking out
      uses: actions/checkout@master
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: kitabisa/sonarqube-action@v1.2.0
      with:
        host: ${{ secrets.SONARQUBE_HOST }}
        login: ${{ secrets.SONARQUBE_TOKEN }}
        
  publish:
    name: publish to lambda
    needs: sonarqube
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:

    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    #- name: install dependencies
      #run: npm ci

    - name: serverless deploy 
      uses: serverless/github-action@v3.2
      with:
        args: deploy function
      env:
        # SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }} 
        # or if using AWS credentials directly
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
